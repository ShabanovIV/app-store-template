{"version":3,"file":"422.867775b72e2d76d7f71c.js","mappings":"oNACA,SAAgB,kBAAoB,0CAA0C,QAAU,gCAAgC,SAAW,iCAAiC,SAAW,kC,gECQxK,MCIMA,EAAqB,K,MAChC,MAAM,SAAEC,EAAQ,MAAEC,GCVO,M,MACzB,MAAMC,GAAY,QAAgBC,GAAUA,EAAMC,OAC5CC,EAAMC,OAAOC,KAAKL,IAClB,KAAEM,EAAI,WAAEC,IAAe,QAAoB,CAAEJ,OAAO,CAAEK,2BAA2B,IAEjFT,EAAoB,CACxBD,SAAUK,EACPM,KAAKC,IAAO,CACXA,KACAC,SAAUX,EAAUU,OAErBE,QAAQC,GAASA,EAAKF,SAAW,IACpCG,OAAQC,EAAA,GAAYC,YAKtB,MAAO,CACLlB,SAHyB,QAAV,EAAAQ,aAAI,EAAJA,EAAMA,YAAI,QAAI,GAI7BP,QACAQ,aACD,EDX2BU,IACtB,OAAEC,GDNe,MACvB,MAAOC,GAAa,UAAEC,EAAS,UAAEC,EAAS,MAAEC,KAAW,UACjDC,GAAW,UACjB,EAAAC,EAAAC,GAAgB,CAAEH,WAClB,EAAAI,EAAA,GAAkB,CAChBL,YACAM,KAAM,+BAER,MAAMC,GAAW,UAcjB,OAZA,IAAAC,YAAU,KACJR,IACFE,GAAS,WACTK,EAAS,KAAOE,OAAOC,MACzB,GAEC,CAACV,IAMG,CACLH,OALoBc,IAAqB,O,OAAD,E,OAAA,E,EAAA,kBAClCb,EAAYa,EACpB,E,YAF0C,K,6QAEzC,EAICZ,YACAC,YACD,ECpBkBY,IACb,WAAEC,EAAU,cAAEC,EAAa,cAAEC,GEdN,CAACtC,IAC9B,MAAMuC,EAASvC,EAASwC,QACtB,CAACC,EAAKC,K,MAGJ,OAFAD,EAAIL,YAAcM,EAAQC,MAC1BF,EAAIJ,eAAiC,QAAhB,EAAAK,EAAQE,gBAAQ,QAAIF,EAAQC,MAC1CF,CAAG,GAEZ,CAAEL,WAAY,EAAGC,cAAe,IAG5BC,EACJC,EAAOF,cAAgB,EAC2B,KAA5CE,EAAOF,cAAgBE,EAAOH,YAAqBG,EAAOF,cAC5D,EAEN,MAAO,CACLD,WAAYG,EAAOH,WACnBC,cAAeE,EAAOF,cACtBC,cAAeO,KAAKC,MAAMR,GAC3B,EFLoDS,CAAgB/C,GAC/D8B,GAAW,UAEXkB,EAID,QAHH,EAAAhD,EAASW,KAAK+B,IAAY,CACxBO,IAAKP,EAAQ9B,GACbsC,OAAQ,KAAM,SAACC,EAAA,GAAW,CAACT,QAASA,eACnC,QAAI,GAMT,OACE,iBAAKU,UAAW,EAAOC,kBAAiB,WACtC,sCACA,6EAEA,SAACC,EAAA,EAAU,CAACN,MAAOA,KAEnB,iBAAKI,UAAW,EAAOG,QAAO,WAC5B,2CACA,0BACE,2CAAyB,KAAC,2BAAO,EAAAC,EAAA,GAAYpB,QAE9CC,EAAgBD,IACf,0BACE,0CACA,iBAAMgB,UAAW,EAAOR,SAAQ,UAAG,EAAAY,EAAA,GAAYnB,QAGlDC,EAAgB,IACf,0BACE,wCAAsB,KAAC,kBAAMc,UAAW,EAAOK,SAAQ,UAAGnB,EAAa,cAI7E,SAAC,IAAO,KACR,UAAC,KAAOoB,MAAK,YACX,SAAC,KAAM,CAACC,QAAS,IAAM7B,EAAS,KAAO1B,KAAK6B,MAAOmB,UAAW,EAAOQ,OAAM,2BAG3E,SAAC,KAAM,CAACD,QAjCO,KACnBvC,EAAOnB,EAAM,EAgCsBmD,UAAW,EAAOQ,OAAM,+BAK5D,EGzDH,EAJ+B,KACtB,SAAC7D,EAAQ,G,oECOX,MAAM2B,EAAkB,EAAYmC,OAAMrC,YAC/C,MAAM,UAAEsC,IAAc,UAEtB,IAAA/B,YAAU,KACR,GAAIP,EAAO,EACT,QAAmBA,GAEfqC,GACFA,EAAKE,WAAU,QAAkBvC,IAGnC,MAAMwC,GAAgB,QAA0BxC,GAC5CwC,GACFF,EAAUE,EAEd,IACC,CAACxC,EAAOqC,EAAMC,GAAW,C,yDCvBvB,MAAMG,EAAa,KACxB,MAAMC,GAAU,IAAAC,YAAW,KAC3B,IAAKD,EACH,MAAM,IAAIE,MAAM,6DAElB,OAAOF,CAAO,C,0DCAT,MAAMtC,EAAoB,EAAGL,YAAWM,WAC7C,MAAM,YAAEwC,IAAgB,UAExB,IAAAtC,YAAU,KACJR,GACF8C,EAAYxC,EACd,GACC,CAACN,EAAWM,EAAMwC,GAAa,C,0DCdpC,MCUaf,EAAyC,EACpDgB,SACAtB,QACAuB,cACAC,uBAEqB,IAAjBxB,EAAMyB,QACD,gBAAKrB,UDjB0I,gCCiBnH,kCAInC,eAAIA,eAAsBsB,IAAXJ,GAAwBA,EDrBsB,mCAA1C,+BCqB0D,SAC1EtB,EAAMrC,KAAI,CAACI,EAAM4D,KAChB,SAACC,EAAQ,CAEP7D,KAAMA,EACN8D,IAAKC,EAAc,CAAE9B,QAAO2B,QAAOJ,cAAaC,uBAF3CzD,EAAKkC,SAad8B,GAAU,IAAAC,aAAyC,EAAGjE,QAAQ8D,KAClE,eAAIjE,GAAIG,EAAKkC,IAAK4B,IAAKA,EAAKzB,UDtCiF,mCCsCvD,SACnDrC,EAAKmC,aAGV6B,EAAQE,YAAc,UAEtB,MAAML,GAAW,IAAAM,MAAKH,GAEhBD,EAAgB,EACpB9B,QACA2B,QACAJ,cACAC,uBAOQW,IACFR,IAAU3B,EAAMyB,OAAS,GAAKF,IAChCA,EAAYa,QAAUD,EAClBX,GACFA,EAAkBxB,EAAMA,EAAMyB,OAAS,GAAGxB,KAE9C,C","sources":["webpack://app-store/./src/widgets/shop/Checkout/ui/Checkout.module.scss?3948","webpack://app-store/./src/widgets/shop/Checkout/model/useCreate.ts","webpack://app-store/./src/widgets/shop/Checkout/ui/Checkout.tsx","webpack://app-store/./src/widgets/shop/Checkout/model/useCheckout.ts","webpack://app-store/./src/widgets/shop/Checkout/lib/calculateTotals.ts","webpack://app-store/./src/pages/CheckoutPage/CheckoutPage.tsx","webpack://app-store/./src/shared/api/errors/useErrorHandler.ts","webpack://app-store/./src/shared/hooks/useMessage.ts","webpack://app-store/./src/shared/hooks/useSuccessHandler.ts","webpack://app-store/./src/shared/ui/RenderList/RenderList.module.scss?5ddc","webpack://app-store/./src/shared/ui/RenderList/RenderList.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"checkoutContainer\":\"Checkout-module_checkoutContainer-U_33V\",\"summary\":\"Checkout-module_summary-CKTL2\",\"oldPrice\":\"Checkout-module_oldPrice-X7J_x\",\"discount\":\"Checkout-module_discount-hQYYR\"};","import { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useCreateOrderMutation, CreateBody } from 'src/entities/Order';\nimport { clearCart } from 'src/features/Cart';\nimport { useErrorHandler } from 'src/shared/api/errors/useErrorHandler';\nimport { ROUTES } from 'src/shared/config/routes';\nimport { useAppDispatch } from 'src/shared/hooks/store';\nimport { useSuccessHandler } from 'src/shared/hooks/useSuccessHandler';\n\nexport const useCreate = () => {\n  const [createOrder, { isLoading, isSuccess, error }] = useCreateOrderMutation();\n  const dispatch = useAppDispatch();\n  useErrorHandler({ error });\n  useSuccessHandler({\n    isSuccess,\n    mess: 'Order created successfully',\n  });\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (isSuccess) {\n      dispatch(clearCart());\n      navigate(ROUTES.orders.path);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isSuccess]);\n\n  const create = async (body: CreateBody) => {\n    await createOrder(body);\n  };\n\n  return {\n    create,\n    isLoading,\n    isSuccess,\n  };\n};\n","import React from 'react';\nimport { Button, Divider } from 'antd';\nimport { useNavigate } from 'react-router-dom';\nimport { ProductCard } from 'src/entities/Product';\nimport { ROUTES } from 'src/shared/config/routes';\nimport { formatPrice } from 'src/shared/lib/formats/formatPrice';\nimport { IRenderItem } from 'src/shared/ui/RenderList/IRenderItem';\nimport { RenderList } from 'src/shared/ui/RenderList/RenderList';\nimport styles from './Checkout.module.scss';\nimport { calculateTotals } from '../lib/calculateTotals';\nimport { useCheckout } from '../model/useCheckout';\nimport { useCreate } from '../model/useCreate';\n\nexport const Checkout: React.FC = () => {\n  const { products, order } = useCheckout();\n  const { create } = useCreate();\n  const { totalPrice, totalOldPrice, totalDiscount } = calculateTotals(products);\n  const navigate = useNavigate();\n\n  const items: IRenderItem[] =\n    products.map((product) => ({\n      key: product.id,\n      render: () => <ProductCard product={product} />,\n    })) ?? [];\n\n  const handleCreate = () => {\n    create(order);\n  };\n\n  return (\n    <div className={styles.checkoutContainer}>\n      <h1>Checkout</h1>\n      <p>Please review your items and proceed to payment.</p>\n\n      <RenderList items={items} />\n\n      <div className={styles.summary}>\n        <h2>Order Summary</h2>\n        <p>\n          <span>Total Price:</span> <span>{formatPrice(totalPrice)}</span>\n        </p>\n        {totalOldPrice > totalPrice && (\n          <p>\n            <span>Old Price:</span>\n            <span className={styles.oldPrice}>{formatPrice(totalOldPrice)}</span>\n          </p>\n        )}\n        {totalDiscount > 0 && (\n          <p>\n            <span>Discount:</span> <span className={styles.discount}>{totalDiscount}%</span>\n          </p>\n        )}\n      </div>\n      <Divider />\n      <Button.Group>\n        <Button onClick={() => navigate(ROUTES.cart.path)} className={styles.button}>\n          Back to cart\n        </Button>\n        <Button onClick={handleCreate} className={styles.button}>\n          Create order\n        </Button>\n      </Button.Group>\n    </div>\n  );\n};\n","import { CreateBody, OrderStatus } from 'src/entities/Order';\nimport { useGetProductsQuery } from 'src/entities/Product';\nimport { useAppSelector } from 'src/shared/hooks/store';\n\nexport const useCheckout = () => {\n  const cartItems = useAppSelector((state) => state.cart);\n  const ids = Object.keys(cartItems);\n  const { data, isFetching } = useGetProductsQuery({ ids }, { refetchOnMountOrArgChange: true });\n\n  const order: CreateBody = {\n    products: ids\n      .map((id) => ({\n        id,\n        quantity: cartItems[id],\n      }))\n      .filter((item) => item.quantity > 0),\n    status: OrderStatus.Processing,\n  };\n\n  const products = data?.data ?? [];\n\n  return {\n    products,\n    order,\n    isFetching,\n  };\n};\n","import { Product } from 'src/entities/Product';\n\nexport const calculateTotals = (products: Product[]) => {\n  const totals = products.reduce(\n    (acc, product) => {\n      acc.totalPrice += product.price;\n      acc.totalOldPrice += product.oldPrice ?? product.price;\n      return acc;\n    },\n    { totalPrice: 0, totalOldPrice: 0 },\n  );\n\n  const totalDiscount =\n    totals.totalOldPrice > 0\n      ? ((totals.totalOldPrice - totals.totalPrice) * 100) / totals.totalOldPrice\n      : 0;\n\n  return {\n    totalPrice: totals.totalPrice,\n    totalOldPrice: totals.totalOldPrice,\n    totalDiscount: Math.round(totalDiscount),\n  };\n};\n","import { Checkout } from 'src/widgets/shop/Checkout';\n\nconst CheckoutPage: React.FC = () => {\n  return <Checkout />;\n};\n\nexport default CheckoutPage;\n","import { useEffect } from 'react';\nimport { FormInstance } from 'antd';\nimport { useMessage } from 'src/shared/hooks/useMessage';\nimport { extractFormErrors, extractWithoutFiledErrors, throwIfGlobalError } from './errorParser';\n\nexport interface UseErrorHandlerProps<TFields> {\n  error: unknown;\n  form?: FormInstance<TFields>;\n}\n\nexport const useErrorHandler = <TFields>({ form, error }: UseErrorHandlerProps<TFields>) => {\n  const { showError } = useMessage();\n\n  useEffect(() => {\n    if (error) {\n      throwIfGlobalError(error);\n\n      if (form) {\n        form.setFields(extractFormErrors(error));\n      }\n\n      const joinedMessage = extractWithoutFiledErrors(error);\n      if (joinedMessage) {\n        showError(joinedMessage);\n      }\n    }\n  }, [error, form, showError]);\n};\n","import { useContext } from 'react';\nimport { MessageContext } from 'src/shared/providers/MessageContext';\n\nexport const useMessage = () => {\n  const context = useContext(MessageContext);\n  if (!context) {\n    throw new Error('useMessage должен использоваться внутри <MessageProvider>');\n  }\n  return context;\n};\n","import { useEffect } from 'react';\nimport { useMessage } from './useMessage';\n\ninterface UseSuccessHandlerProps {\n  isSuccess: boolean;\n  mess: string;\n}\n\nexport const useSuccessHandler = ({ isSuccess, mess }: UseSuccessHandlerProps) => {\n  const { showSuccess } = useMessage();\n\n  useEffect(() => {\n    if (isSuccess) {\n      showSuccess(mess);\n    }\n  }, [isSuccess, mess, showSuccess]);\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"RenderList-module_list-BF_R0\",\"listGrid\":\"RenderList-module_listGrid-VEEh9\",\"listItem\":\"RenderList-module_listItem-d2Xxn\",\"empty\":\"RenderList-module_empty-VeKxm\"};","import React, { forwardRef, memo } from 'react';\nimport { IRenderItem } from './IRenderItem';\nimport styles from './RenderList.module.scss';\n\nexport interface IRenderListProps {\n  isGrid?: boolean;\n  items: IRenderItem[];\n  lastItemRef?: React.RefObject<HTMLLIElement | null>;\n  onLastItemChanged?: (key: string) => void;\n}\n\nexport const RenderList: React.FC<IRenderListProps> = ({\n  isGrid,\n  items,\n  lastItemRef,\n  onLastItemChanged,\n}) => {\n  if (items.length === 0) {\n    return <div className={styles.empty}>No items to display</div>;\n  }\n\n  return (\n    <ul className={isGrid === undefined || isGrid ? styles.listGrid : styles.list}>\n      {items.map((item, index) => (\n        <ItemMemo\n          key={item.key}\n          item={item}\n          ref={setRefForLast({ items, index, lastItemRef, onLastItemChanged })}\n        />\n      ))}\n    </ul>\n  );\n};\n\ntype ListItemProps = {\n  item: IRenderItem;\n};\n\nconst ItemRef = forwardRef<HTMLLIElement, ListItemProps>(({ item }, ref) => (\n  <li id={item.key} ref={ref} className={styles.listItem}>\n    {item.render()}\n  </li>\n));\nItemRef.displayName = 'ItemRef';\n\nconst ItemMemo = memo(ItemRef);\n\nconst setRefForLast = ({\n  items,\n  index,\n  lastItemRef,\n  onLastItemChanged,\n}: {\n  items: IRenderItem[];\n  index: number;\n  onLastItemChanged?: (key: string) => void;\n  lastItemRef?: React.RefObject<HTMLLIElement | null>;\n}) => {\n  return (element: HTMLLIElement | null) => {\n    if (index === items.length - 1 && lastItemRef) {\n      lastItemRef.current = element;\n      if (onLastItemChanged) {\n        onLastItemChanged(items[items.length - 1].key);\n      }\n    }\n  };\n};\n"],"names":["Checkout","products","order","cartItems","state","cart","ids","Object","keys","data","isFetching","refetchOnMountOrArgChange","map","id","quantity","filter","item","status","Order","Processing","useCheckout","create","createOrder","isLoading","isSuccess","error","dispatch","useErrorHandler","u","useSuccessHandler","mess","navigate","useEffect","orders","path","body","useCreate","totalPrice","totalOldPrice","totalDiscount","totals","reduce","acc","product","price","oldPrice","Math","round","calculateTotals","items","key","render","Product","className","checkoutContainer","RenderList","summary","formatPrice","discount","Group","onClick","button","form","showError","setFields","joinedMessage","useMessage","context","useContext","Error","showSuccess","isGrid","lastItemRef","onLastItemChanged","length","undefined","index","ItemMemo","ref","setRefForLast","ItemRef","forwardRef","displayName","memo","element","current"],"sourceRoot":""}